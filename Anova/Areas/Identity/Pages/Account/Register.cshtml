@page
@model RegisterModel
@using Anova_Utility

<div class="py-4">
        <div asp-validation-summary="All" class="text-danger"></div>

        <div class="container form-group">
            <div class="col-10 offset-1">
            <div class="card" style="border-radius: 10px;">
                    <div class="card-body px-lg-5 pt-4">
                        <form asp-route-returnUrl="@Model.ReturnUrl" method="post">
                            <h1 class=" col-12 text-center py-4">
                                @if (User.IsInRole(WC.AdminRole))
                                {
                                    <strong>Register an Admin Account</strong>
                                }
                                else
                                {
                                    <strong>Register</strong>
                                }
                            </h1>
                            <hr />
                            <div class="py-2">
                                <input asp-for="Input.FullName" placeholder="Name" class="form-control" />
                                <span asp-validation-for="Input.FullName" class="text-danger"></span>
                            </div>

                            <div class="py-2">
                                <input asp-for="Input.Email" placeholder="Email" type="email" class="form-control" />
                                <span asp-validation-for="Input.Email" class="text-danger"></span>
                            </div>

                            <div class="py-2">
                                <div class="input-group">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text">+48</span>
                                    </div>
                                    <input asp-for="Input.PhoneNumber" placeholder="Phone Number" type="text" class="form-control" />
                                </div>
                                <span asp-validation-for="Input.PhoneNumber" class="text-danger"></span>
                            </div>

                            <div class="form-row row py-2">
                                <div class="col-6">
                                    <input asp-for="Input.Password" placeholder="Password" type="password" class="form-control" />
                                </div>
                                <div class="col-6">
                                    <input asp-for="Input.ConfirmPassword" placeholder="Confirm Password" type="password" class="form-control" />

                                </div>
                                <span asp-validation-for="Input.Password" class="text-danger"></span>
                                <span asp-validation-for="Input.ConfirmPassword" class="text-danger"></span>
                            </div>
                        <div class="py-3 col-md-5 mx-auto text-center">
                            @if (User.IsInRole(WC.AdminRole))
                            {
                                <button type="submit" class="btn btn-warning form-control">Sing Up Admin User</button>
                            }
                            else
                            {
                                <button type="submit" class="text-dark btn btn-block btn-outline-secondary form-control">Sing Up</button>
                            }
                        </div>
                        </form>
                        @if(!User.IsInRole(WC.AdminRole))
                    {
                        
                    
                    <form id="external-account" asp-page="./ExternalLogin" asp-route-returnUrl="@Model.ReturnUrl" method="post" class="form-horizontal">
                            <label>
                                By clicking <em>Sing Up</em> you agree to our <a style="color: #ce3232" asp-area="" asp-controller="Home" asp-action="Privacy">Personal Data Processing Policy</a>
                            </label>
                            <div style="display: flex; align-items: center; text-align: center; margin: 20px 0;">
                                <div style="flex: 1; border-top: 1px solid #ccc;"></div>
                                <span style="margin: 0 10px;">Or Continue with</span>
                                <div style="flex: 1; border-top: 1px solid #ccc;"></div>
                            </div>
                            <div class="pt-2 row justify-content-md-center">
                                
                                    @foreach (var provider in Model.ExternalLogins)
                                    {
                                        @if (provider.Name.ToLower().Contains("facebook"))
                                        {
                                            <button type="submit" class="btn btn-outline-primary  col-3"
                                                    name="provider" value="@provider.Name"
                                                    title="Log in using your @provider.DisplayName account">
                                                <i class="fab fa-facebook-square"></i> @provider.DisplayName
                                            </button>
                                            <div class="col-1"></div>
                                        }
                                        else
                                        {
                                            <button type="submit" class="btn btn-outline-danger  col-3" name="provider" value="@provider.Name" title="Log in using your @provider.DisplayName account"><i class="fa-brands fa-google"></i>&nbsp;@provider.DisplayName</button>
                                        }
                                    }
                                
                            </div>
                        </form>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>



@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>

        toastr.options = {
            "positionClass": "toast-top-right", // Центр сверху
            "timeOut": 0, // Никогда не исчезает
            "extendedTimeOut": 0, // Остается, пока пользователь не закроет его
            "showDuration": "900",           // Анимация появления (мс)
            "showEasing": "linear"           // Эффект появления (swing, linear)

        };
        toastr.error('Jeśli chcesz wypróbować logowanie lub rejestrację za pomocą Google lub Facebooka, użyj anonimowych kart przeglądarki.');
    </script>
}
